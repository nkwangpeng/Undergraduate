Terminals unused in grammar

    K_SKIP
    BOOL
    LOP_MUL
    LOP_DIV
    UMINUS
    UADD


State 18 conflicts: 1 shift/reduce
State 53 conflicts: 3 shift/reduce
State 54 conflicts: 5 shift/reduce
State 92 conflicts: 1 shift/reduce
State 109 conflicts: 6 shift/reduce
State 110 conflicts: 6 shift/reduce
State 111 conflicts: 6 shift/reduce
State 112 conflicts: 6 shift/reduce
State 113 conflicts: 6 shift/reduce
State 114 conflicts: 5 shift/reduce
State 117 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | LBRACE statements RBRACE
    6          | declaration SEMICOLON
    7          | assignment SEMICOLON
    8          | expr_stmt SEMICOLON
    9          | if_stmt
   10          | while_stmt
   11          | for_stmt
   12          | def_func
   13          | call_func
   14          | printf SEMICOLON
   15          | scanf SEMICOLON

   16 expr_stmt: expr

   17 call_args: IDENTIFIER
   18          | IDAddr
   19          | IDPtr
   20          | call_args COMMA IDENTIFIER
   21          | call_args COMMA IDAddr
   22          | call_args COMMA IDPtr

   23 def_func: T IDENTIFIER LPAREN call_args RPAREN statement
   24         | T IDENTIFIER LPAREN RPAREN statement

   25 call_func: IDENTIFIER LPAREN call_args RPAREN statement

   26 declaration: T IDENTIFIER LOP_ASSIGN expr
   27            | T IDLIST

   28 IDLIST: expr COMMA IDLIST
   29       | expr

   30 if_stmt: K_IF LPAREN expr RPAREN statement K_ELSE statement
   31        | K_IF LPAREN expr RPAREN statement

   32 while_stmt: K_WHILE LPAREN expr RPAREN statement

   33 for_stmt: K_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement
   34         | K_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statement

   35 assignment: IDENTIFIER LOP_ASSIGN expr

   36 printf: F_PRINTF LPAREN STRING COMMA call_args RPAREN
   37       | F_PRINTF LPAREN STRING RPAREN

   38 scanf: F_SCANF LPAREN STRING COMMA call_args RPAREN

   39 expr: expr LOP_ASSIGN expr
   40     | expr LOP_ADDASS expr
   41     | expr LOP_SUBASS expr
   42     | expr LOP_MULTASS expr
   43     | expr LOP_DEVASS expr
   44     | expr LOP_MODASS expr
   45     | or_expr

   46 or_expr: or_expr LOP_OR and_expr
   47        | and_expr

   48 and_expr: and_expr LOP_AND bor_expr
   49         | bor_expr

   50 bor_expr: bor_expr LOP_BOR bor_expr
   51         | xor_expr

   52 xor_expr: xor_expr LOP_XOR band_expr
   53         | band_expr

   54 band_expr: band_expr LOP_BAND comp_expr
   55          | comp_expr

   56 comp_expr: TRUE
   57          | FALSE
   58          | comp_expr LOP_EQ sh_expr
   59          | comp_expr LOP_NEQ sh_expr
   60          | comp_expr LOP_LEQ sh_expr
   61          | comp_expr LOP_SEQ sh_expr
   62          | comp_expr LOP_L sh_expr
   63          | comp_expr LOP_S sh_expr
   64          | sh_expr

   65 sh_expr: sh_expr LOP_SHL as_expr
   66        | sh_expr LOP_SHR as_expr
   67        | as_expr

   68 as_expr: as_expr LOP_ADD term
   69        | as_expr LOP_SUB term
   70        | term

   71 term: term LOP_MULT factor
   72     | term LOP_DEV factor
   73     | term LOP_MOD factor
   74     | term LOP_DADD
   75     | term LOP_DSUB
   76     | factor

   77 factor: LPAREN expr RPAREN
   78       | IDENTIFIER
   79       | INTEGER
   80       | CHAR
   81       | LOP_NOT term
   82       | LOP_BNOT term
   83       | STRING

   84 T: T_INT
   85  | T_CHAR
   86  | T_BOOL
   87  | T_VOID
   88  | T_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TRUE (258) 56
    FALSE (259) 57
    T_CHAR (260) 85
    T_INT (261) 84
    T_STRING (262) 88
    T_BOOL (263) 86
    T_VOID (264) 87
    IDAddr (265) 18 21
    IDPtr (266) 19 22
    K_IF (267) 30 31
    K_ELSE (268) 30
    K_WHILE (269) 32
    K_FOR (270) 33 34
    K_SKIP (271)
    F_PRINTF (272) 36 37
    F_SCANF (273) 38
    LOP_ADD (274) 68
    LOP_SUB (275) 69
    LOP_MULT (276) 71
    LOP_DEV (277) 72
    LOP_MOD (278) 73
    LOP_DADD (279) 74
    LOP_DSUB (280) 75
    LOP_ADDASS (281) 40
    LOP_SUBASS (282) 41
    LOP_MULTASS (283) 42
    LOP_DEVASS (284) 43
    LOP_MODASS (285) 44
    LOP_AND (286) 48
    LOP_OR (287) 46
    LOP_NOT (288) 81
    LOP_BNOT (289) 82
    LOP_BOR (290) 50
    LOP_BAND (291) 54
    LOP_XOR (292) 52
    LOP_EQ (293) 58
    LOP_NEQ (294) 59
    LOP_L (295) 62
    LOP_LEQ (296) 60
    LOP_S (297) 63
    LOP_SEQ (298) 61
    LOP_SHL (299) 65
    LOP_SHR (300) 66
    LOP_ASSIGN (301) 26 35 39
    SEMICOLON (302) 4 6 7 8 14 15 33 34
    LPAREN (303) 23 24 25 30 31 32 33 34 36 37 38 77
    RPAREN (304) 23 24 25 30 31 32 33 34 36 37 38 77
    LBRACE (305) 5
    RBRACE (306) 5
    IDENTIFIER (307) 17 20 23 24 25 26 35 78
    INTEGER (308) 79
    CHAR (309) 80
    BOOL (310)
    STRING (311) 36 37 38 83
    COMMA (312) 20 21 22 28 36 38
    LOP_MUL (313)
    LOP_DIV (314)
    UMINUS (315)
    UADD (316)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program (63)
        on left: 1
        on right: 0
    statements (64)
        on left: 2 3
        on right: 1 3 5
    statement (65)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 2 3 23 24 25 30 31 32 33 34
    expr_stmt (66)
        on left: 16
        on right: 8
    call_args (67)
        on left: 17 18 19 20 21 22
        on right: 20 21 22 23 25 36 38
    def_func (68)
        on left: 23 24
        on right: 12
    call_func (69)
        on left: 25
        on right: 13
    declaration (70)
        on left: 26 27
        on right: 6 34
    IDLIST (71)
        on left: 28 29
        on right: 27 28
    if_stmt (72)
        on left: 30 31
        on right: 9
    while_stmt (73)
        on left: 32
        on right: 10
    for_stmt (74)
        on left: 33 34
        on right: 11
    assignment (75)
        on left: 35
        on right: 7
    printf (76)
        on left: 36 37
        on right: 14
    scanf (77)
        on left: 38
        on right: 15
    expr (78)
        on left: 39 40 41 42 43 44 45
        on right: 16 26 28 29 30 31 32 33 34 35 39 40 41 42 43 44 77
    or_expr (79)
        on left: 46 47
        on right: 45 46
    and_expr (80)
        on left: 48 49
        on right: 46 47 48
    bor_expr (81)
        on left: 50 51
        on right: 48 49 50
    xor_expr (82)
        on left: 52 53
        on right: 51 52
    band_expr (83)
        on left: 54 55
        on right: 52 53 54
    comp_expr (84)
        on left: 56 57 58 59 60 61 62 63 64
        on right: 54 55 58 59 60 61 62 63
    sh_expr (85)
        on left: 65 66 67
        on right: 58 59 60 61 62 63 64 65 66
    as_expr (86)
        on left: 68 69 70
        on right: 65 66 67 68 69
    term (87)
        on left: 71 72 73 74 75 76
        on right: 68 69 70 71 72 73 74 75 81 82
    factor (88)
        on left: 77 78 79 80 81 82 83
        on right: 71 72 73 76
    T (89)
        on left: 84 85 86 87 88
        on right: 23 24 26 27


State 0

    0 $accept: . program $end

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    program      go to state 22
    statements   go to state 23
    statement    go to state 24
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 1

   56 comp_expr: TRUE .

    $default  reduce using rule 56 (comp_expr)


State 2

   57 comp_expr: FALSE .

    $default  reduce using rule 57 (comp_expr)


State 3

   85 T: T_CHAR .

    $default  reduce using rule 85 (T)


State 4

   84 T: T_INT .

    $default  reduce using rule 84 (T)


State 5

   88 T: T_STRING .

    $default  reduce using rule 88 (T)


State 6

   86 T: T_BOOL .

    $default  reduce using rule 86 (T)


State 7

   87 T: T_VOID .

    $default  reduce using rule 87 (T)


State 8

   30 if_stmt: K_IF . LPAREN expr RPAREN statement K_ELSE statement
   31        | K_IF . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 47


State 9

   32 while_stmt: K_WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 48


State 10

   33 for_stmt: K_FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement
   34         | K_FOR . LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statement

    LPAREN  shift, and go to state 49


State 11

   36 printf: F_PRINTF . LPAREN STRING COMMA call_args RPAREN
   37       | F_PRINTF . LPAREN STRING RPAREN

    LPAREN  shift, and go to state 50


State 12

   38 scanf: F_SCANF . LPAREN STRING COMMA call_args RPAREN

    LPAREN  shift, and go to state 51


State 13

   81 factor: LOP_NOT . term

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    term    go to state 53
    factor  go to state 45


State 14

   82 factor: LOP_BNOT . term

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    term    go to state 54
    factor  go to state 45


State 15

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 16

   77 factor: LPAREN . expr RPAREN

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 55
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 17

    5 statement: LBRACE . statements RBRACE

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statements   go to state 56
    statement    go to state 24
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 18

   25 call_func: IDENTIFIER . LPAREN call_args RPAREN statement
   35 assignment: IDENTIFIER . LOP_ASSIGN expr
   78 factor: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 57
    LPAREN      shift, and go to state 58

    LOP_ASSIGN  [reduce using rule 78 (factor)]
    $default    reduce using rule 78 (factor)


State 19

   79 factor: INTEGER .

    $default  reduce using rule 79 (factor)


State 20

   80 factor: CHAR .

    $default  reduce using rule 80 (factor)


State 21

   83 factor: STRING .

    $default  reduce using rule 83 (factor)


State 22

    0 $accept: program . $end

    $end  shift, and go to state 59


State 23

    1 program: statements .
    3 statements: statements . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 1 (program)

    statement    go to state 60
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 24

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 25

    8 statement: expr_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 26

   12 statement: def_func .

    $default  reduce using rule 12 (statement)


State 27

   13 statement: call_func .

    $default  reduce using rule 13 (statement)


State 28

    6 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 29

    9 statement: if_stmt .

    $default  reduce using rule 9 (statement)


State 30

   10 statement: while_stmt .

    $default  reduce using rule 10 (statement)


State 31

   11 statement: for_stmt .

    $default  reduce using rule 11 (statement)


State 32

    7 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 33

   14 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 34

   15 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 35

   16 expr_stmt: expr .
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    $default  reduce using rule 16 (expr_stmt)


State 36

   45 expr: or_expr .
   46 or_expr: or_expr . LOP_OR and_expr

    LOP_OR  shift, and go to state 72

    $default  reduce using rule 45 (expr)


State 37

   47 or_expr: and_expr .
   48 and_expr: and_expr . LOP_AND bor_expr

    LOP_AND  shift, and go to state 73

    $default  reduce using rule 47 (or_expr)


State 38

   49 and_expr: bor_expr .
   50 bor_expr: bor_expr . LOP_BOR bor_expr

    LOP_BOR  shift, and go to state 74

    $default  reduce using rule 49 (and_expr)


State 39

   51 bor_expr: xor_expr .
   52 xor_expr: xor_expr . LOP_XOR band_expr

    LOP_XOR  shift, and go to state 75

    $default  reduce using rule 51 (bor_expr)


State 40

   53 xor_expr: band_expr .
   54 band_expr: band_expr . LOP_BAND comp_expr

    LOP_BAND  shift, and go to state 76

    $default  reduce using rule 53 (xor_expr)


State 41

   55 band_expr: comp_expr .
   58 comp_expr: comp_expr . LOP_EQ sh_expr
   59          | comp_expr . LOP_NEQ sh_expr
   60          | comp_expr . LOP_LEQ sh_expr
   61          | comp_expr . LOP_SEQ sh_expr
   62          | comp_expr . LOP_L sh_expr
   63          | comp_expr . LOP_S sh_expr

    LOP_EQ   shift, and go to state 77
    LOP_NEQ  shift, and go to state 78
    LOP_L    shift, and go to state 79
    LOP_LEQ  shift, and go to state 80
    LOP_S    shift, and go to state 81
    LOP_SEQ  shift, and go to state 82

    $default  reduce using rule 55 (band_expr)


State 42

   64 comp_expr: sh_expr .
   65 sh_expr: sh_expr . LOP_SHL as_expr
   66        | sh_expr . LOP_SHR as_expr

    LOP_SHL  shift, and go to state 83
    LOP_SHR  shift, and go to state 84

    $default  reduce using rule 64 (comp_expr)


State 43

   67 sh_expr: as_expr .
   68 as_expr: as_expr . LOP_ADD term
   69        | as_expr . LOP_SUB term

    LOP_ADD  shift, and go to state 85
    LOP_SUB  shift, and go to state 86

    $default  reduce using rule 67 (sh_expr)


State 44

   70 as_expr: term .
   71 term: term . LOP_MULT factor
   72     | term . LOP_DEV factor
   73     | term . LOP_MOD factor
   74     | term . LOP_DADD
   75     | term . LOP_DSUB

    LOP_MULT  shift, and go to state 87
    LOP_DEV   shift, and go to state 88
    LOP_MOD   shift, and go to state 89
    LOP_DADD  shift, and go to state 90
    LOP_DSUB  shift, and go to state 91

    $default  reduce using rule 70 (as_expr)


State 45

   76 term: factor .

    $default  reduce using rule 76 (term)


State 46

   23 def_func: T . IDENTIFIER LPAREN call_args RPAREN statement
   24         | T . IDENTIFIER LPAREN RPAREN statement
   26 declaration: T . IDENTIFIER LOP_ASSIGN expr
   27            | T . IDLIST

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 92
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    IDLIST     go to state 93
    expr       go to state 94
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 47

   30 if_stmt: K_IF LPAREN . expr RPAREN statement K_ELSE statement
   31        | K_IF LPAREN . expr RPAREN statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 95
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 48

   32 while_stmt: K_WHILE LPAREN . expr RPAREN statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 96
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 49

   33 for_stmt: K_FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN statement
   34         | K_FOR LPAREN . declaration SEMICOLON expr SEMICOLON expr RPAREN statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    declaration  go to state 97
    expr         go to state 98
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 99


State 50

   36 printf: F_PRINTF LPAREN . STRING COMMA call_args RPAREN
   37       | F_PRINTF LPAREN . STRING RPAREN

    STRING  shift, and go to state 100


State 51

   38 scanf: F_SCANF LPAREN . STRING COMMA call_args RPAREN

    STRING  shift, and go to state 101


State 52

   78 factor: IDENTIFIER .

    $default  reduce using rule 78 (factor)


State 53

   71 term: term . LOP_MULT factor
   72     | term . LOP_DEV factor
   73     | term . LOP_MOD factor
   74     | term . LOP_DADD
   75     | term . LOP_DSUB
   81 factor: LOP_NOT term .

    LOP_MULT  shift, and go to state 87
    LOP_DEV   shift, and go to state 88
    LOP_MOD   shift, and go to state 89
    LOP_DADD  shift, and go to state 90
    LOP_DSUB  shift, and go to state 91

    LOP_MULT  [reduce using rule 81 (factor)]
    LOP_DEV   [reduce using rule 81 (factor)]
    LOP_MOD   [reduce using rule 81 (factor)]
    $default  reduce using rule 81 (factor)


State 54

   71 term: term . LOP_MULT factor
   72     | term . LOP_DEV factor
   73     | term . LOP_MOD factor
   74     | term . LOP_DADD
   75     | term . LOP_DSUB
   82 factor: LOP_BNOT term .

    LOP_MULT  shift, and go to state 87
    LOP_DEV   shift, and go to state 88
    LOP_MOD   shift, and go to state 89
    LOP_DADD  shift, and go to state 90
    LOP_DSUB  shift, and go to state 91

    LOP_MULT  [reduce using rule 82 (factor)]
    LOP_DEV   [reduce using rule 82 (factor)]
    LOP_MOD   [reduce using rule 82 (factor)]
    LOP_DADD  [reduce using rule 82 (factor)]
    LOP_DSUB  [reduce using rule 82 (factor)]
    $default  reduce using rule 82 (factor)


State 55

   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr
   77 factor: LPAREN expr . RPAREN

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    RPAREN       shift, and go to state 102


State 56

    3 statements: statements . statement
    5 statement: LBRACE statements . RBRACE

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    RBRACE      shift, and go to state 103
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 60
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 57

   35 assignment: IDENTIFIER LOP_ASSIGN . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 104
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 58

   25 call_func: IDENTIFIER LPAREN . call_args RPAREN statement

    IDAddr      shift, and go to state 105
    IDPtr       shift, and go to state 106
    IDENTIFIER  shift, and go to state 107

    call_args  go to state 108


State 59

    0 $accept: program $end .

    $default  accept


State 60

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 61

    8 statement: expr_stmt SEMICOLON .

    $default  reduce using rule 8 (statement)


State 62

    6 statement: declaration SEMICOLON .

    $default  reduce using rule 6 (statement)


State 63

    7 statement: assignment SEMICOLON .

    $default  reduce using rule 7 (statement)


State 64

   14 statement: printf SEMICOLON .

    $default  reduce using rule 14 (statement)


State 65

   15 statement: scanf SEMICOLON .

    $default  reduce using rule 15 (statement)


State 66

   40 expr: expr LOP_ADDASS . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 109
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 67

   41 expr: expr LOP_SUBASS . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 110
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 68

   42 expr: expr LOP_MULTASS . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 111
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 69

   43 expr: expr LOP_DEVASS . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 112
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 70

   44 expr: expr LOP_MODASS . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 113
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 71

   39 expr: expr LOP_ASSIGN . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 114
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 72

   46 or_expr: or_expr LOP_OR . and_expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    and_expr   go to state 115
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 73

   48 and_expr: and_expr LOP_AND . bor_expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    bor_expr   go to state 116
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 74

   50 bor_expr: bor_expr LOP_BOR . bor_expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    bor_expr   go to state 117
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 75

   52 xor_expr: xor_expr LOP_XOR . band_expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    band_expr  go to state 118
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 76

   54 band_expr: band_expr LOP_BAND . comp_expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    comp_expr  go to state 119
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 77

   58 comp_expr: comp_expr LOP_EQ . sh_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    sh_expr  go to state 120
    as_expr  go to state 43
    term     go to state 44
    factor   go to state 45


State 78

   59 comp_expr: comp_expr LOP_NEQ . sh_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    sh_expr  go to state 121
    as_expr  go to state 43
    term     go to state 44
    factor   go to state 45


State 79

   62 comp_expr: comp_expr LOP_L . sh_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    sh_expr  go to state 122
    as_expr  go to state 43
    term     go to state 44
    factor   go to state 45


State 80

   60 comp_expr: comp_expr LOP_LEQ . sh_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    sh_expr  go to state 123
    as_expr  go to state 43
    term     go to state 44
    factor   go to state 45


State 81

   63 comp_expr: comp_expr LOP_S . sh_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    sh_expr  go to state 124
    as_expr  go to state 43
    term     go to state 44
    factor   go to state 45


State 82

   61 comp_expr: comp_expr LOP_SEQ . sh_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    sh_expr  go to state 125
    as_expr  go to state 43
    term     go to state 44
    factor   go to state 45


State 83

   65 sh_expr: sh_expr LOP_SHL . as_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    as_expr  go to state 126
    term     go to state 44
    factor   go to state 45


State 84

   66 sh_expr: sh_expr LOP_SHR . as_expr

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    as_expr  go to state 127
    term     go to state 44
    factor   go to state 45


State 85

   68 as_expr: as_expr LOP_ADD . term

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    term    go to state 128
    factor  go to state 45


State 86

   69 as_expr: as_expr LOP_SUB . term

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    term    go to state 129
    factor  go to state 45


State 87

   71 term: term LOP_MULT . factor

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    factor  go to state 130


State 88

   72 term: term LOP_DEV . factor

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    factor  go to state 131


State 89

   73 term: term LOP_MOD . factor

    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    factor  go to state 132


State 90

   74 term: term LOP_DADD .

    $default  reduce using rule 74 (term)


State 91

   75 term: term LOP_DSUB .

    $default  reduce using rule 75 (term)


State 92

   23 def_func: T IDENTIFIER . LPAREN call_args RPAREN statement
   24         | T IDENTIFIER . LPAREN RPAREN statement
   26 declaration: T IDENTIFIER . LOP_ASSIGN expr
   78 factor: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 133
    LPAREN      shift, and go to state 134

    LOP_ASSIGN  [reduce using rule 78 (factor)]
    $default    reduce using rule 78 (factor)


State 93

   27 declaration: T IDLIST .

    $default  reduce using rule 27 (declaration)


State 94

   28 IDLIST: expr . COMMA IDLIST
   29       | expr .
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    COMMA        shift, and go to state 135

    $default  reduce using rule 29 (IDLIST)


State 95

   30 if_stmt: K_IF LPAREN expr . RPAREN statement K_ELSE statement
   31        | K_IF LPAREN expr . RPAREN statement
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    RPAREN       shift, and go to state 136


State 96

   32 while_stmt: K_WHILE LPAREN expr . RPAREN statement
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    RPAREN       shift, and go to state 137


State 97

   34 for_stmt: K_FOR LPAREN declaration . SEMICOLON expr SEMICOLON expr RPAREN statement

    SEMICOLON  shift, and go to state 138


State 98

   33 for_stmt: K_FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN statement
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    SEMICOLON    shift, and go to state 139


State 99

   26 declaration: T . IDENTIFIER LOP_ASSIGN expr
   27            | T . IDLIST

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 140
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    IDLIST     go to state 93
    expr       go to state 94
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 100

   36 printf: F_PRINTF LPAREN STRING . COMMA call_args RPAREN
   37       | F_PRINTF LPAREN STRING . RPAREN

    RPAREN  shift, and go to state 141
    COMMA   shift, and go to state 142


State 101

   38 scanf: F_SCANF LPAREN STRING . COMMA call_args RPAREN

    COMMA  shift, and go to state 143


State 102

   77 factor: LPAREN expr RPAREN .

    $default  reduce using rule 77 (factor)


State 103

    5 statement: LBRACE statements RBRACE .

    $default  reduce using rule 5 (statement)


State 104

   35 assignment: IDENTIFIER LOP_ASSIGN expr .
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    $default  reduce using rule 35 (assignment)


State 105

   18 call_args: IDAddr .

    $default  reduce using rule 18 (call_args)


State 106

   19 call_args: IDPtr .

    $default  reduce using rule 19 (call_args)


State 107

   17 call_args: IDENTIFIER .

    $default  reduce using rule 17 (call_args)


State 108

   20 call_args: call_args . COMMA IDENTIFIER
   21          | call_args . COMMA IDAddr
   22          | call_args . COMMA IDPtr
   25 call_func: IDENTIFIER LPAREN call_args . RPAREN statement

    RPAREN  shift, and go to state 144
    COMMA   shift, and go to state 145


State 109

   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   40     | expr LOP_ADDASS expr .
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    LOP_ADDASS   [reduce using rule 40 (expr)]
    LOP_SUBASS   [reduce using rule 40 (expr)]
    LOP_MULTASS  [reduce using rule 40 (expr)]
    LOP_DEVASS   [reduce using rule 40 (expr)]
    LOP_MODASS   [reduce using rule 40 (expr)]
    LOP_ASSIGN   [reduce using rule 40 (expr)]
    $default     reduce using rule 40 (expr)


State 110

   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   41     | expr LOP_SUBASS expr .
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    LOP_ADDASS   [reduce using rule 41 (expr)]
    LOP_SUBASS   [reduce using rule 41 (expr)]
    LOP_MULTASS  [reduce using rule 41 (expr)]
    LOP_DEVASS   [reduce using rule 41 (expr)]
    LOP_MODASS   [reduce using rule 41 (expr)]
    LOP_ASSIGN   [reduce using rule 41 (expr)]
    $default     reduce using rule 41 (expr)


State 111

   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   42     | expr LOP_MULTASS expr .
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    LOP_ADDASS   [reduce using rule 42 (expr)]
    LOP_SUBASS   [reduce using rule 42 (expr)]
    LOP_MULTASS  [reduce using rule 42 (expr)]
    LOP_DEVASS   [reduce using rule 42 (expr)]
    LOP_MODASS   [reduce using rule 42 (expr)]
    LOP_ASSIGN   [reduce using rule 42 (expr)]
    $default     reduce using rule 42 (expr)


State 112

   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   43     | expr LOP_DEVASS expr .
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    LOP_ADDASS   [reduce using rule 43 (expr)]
    LOP_SUBASS   [reduce using rule 43 (expr)]
    LOP_MULTASS  [reduce using rule 43 (expr)]
    LOP_DEVASS   [reduce using rule 43 (expr)]
    LOP_MODASS   [reduce using rule 43 (expr)]
    LOP_ASSIGN   [reduce using rule 43 (expr)]
    $default     reduce using rule 43 (expr)


State 113

   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr
   44     | expr LOP_MODASS expr .

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    LOP_ADDASS   [reduce using rule 44 (expr)]
    LOP_SUBASS   [reduce using rule 44 (expr)]
    LOP_MULTASS  [reduce using rule 44 (expr)]
    LOP_DEVASS   [reduce using rule 44 (expr)]
    LOP_MODASS   [reduce using rule 44 (expr)]
    LOP_ASSIGN   [reduce using rule 44 (expr)]
    $default     reduce using rule 44 (expr)


State 114

   39 expr: expr . LOP_ASSIGN expr
   39     | expr LOP_ASSIGN expr .
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    LOP_ADDASS   [reduce using rule 39 (expr)]
    LOP_SUBASS   [reduce using rule 39 (expr)]
    LOP_MULTASS  [reduce using rule 39 (expr)]
    LOP_DEVASS   [reduce using rule 39 (expr)]
    LOP_MODASS   [reduce using rule 39 (expr)]
    $default     reduce using rule 39 (expr)


State 115

   46 or_expr: or_expr LOP_OR and_expr .
   48 and_expr: and_expr . LOP_AND bor_expr

    LOP_AND  shift, and go to state 73

    $default  reduce using rule 46 (or_expr)


State 116

   48 and_expr: and_expr LOP_AND bor_expr .
   50 bor_expr: bor_expr . LOP_BOR bor_expr

    LOP_BOR  shift, and go to state 74

    $default  reduce using rule 48 (and_expr)


State 117

   50 bor_expr: bor_expr . LOP_BOR bor_expr
   50         | bor_expr LOP_BOR bor_expr .

    LOP_BOR  shift, and go to state 74

    LOP_BOR   [reduce using rule 50 (bor_expr)]
    $default  reduce using rule 50 (bor_expr)


State 118

   52 xor_expr: xor_expr LOP_XOR band_expr .
   54 band_expr: band_expr . LOP_BAND comp_expr

    LOP_BAND  shift, and go to state 76

    $default  reduce using rule 52 (xor_expr)


State 119

   54 band_expr: band_expr LOP_BAND comp_expr .
   58 comp_expr: comp_expr . LOP_EQ sh_expr
   59          | comp_expr . LOP_NEQ sh_expr
   60          | comp_expr . LOP_LEQ sh_expr
   61          | comp_expr . LOP_SEQ sh_expr
   62          | comp_expr . LOP_L sh_expr
   63          | comp_expr . LOP_S sh_expr

    LOP_EQ   shift, and go to state 77
    LOP_NEQ  shift, and go to state 78
    LOP_L    shift, and go to state 79
    LOP_LEQ  shift, and go to state 80
    LOP_S    shift, and go to state 81
    LOP_SEQ  shift, and go to state 82

    $default  reduce using rule 54 (band_expr)


State 120

   58 comp_expr: comp_expr LOP_EQ sh_expr .
   65 sh_expr: sh_expr . LOP_SHL as_expr
   66        | sh_expr . LOP_SHR as_expr

    LOP_SHL  shift, and go to state 83
    LOP_SHR  shift, and go to state 84

    $default  reduce using rule 58 (comp_expr)


State 121

   59 comp_expr: comp_expr LOP_NEQ sh_expr .
   65 sh_expr: sh_expr . LOP_SHL as_expr
   66        | sh_expr . LOP_SHR as_expr

    LOP_SHL  shift, and go to state 83
    LOP_SHR  shift, and go to state 84

    $default  reduce using rule 59 (comp_expr)


State 122

   62 comp_expr: comp_expr LOP_L sh_expr .
   65 sh_expr: sh_expr . LOP_SHL as_expr
   66        | sh_expr . LOP_SHR as_expr

    LOP_SHL  shift, and go to state 83
    LOP_SHR  shift, and go to state 84

    $default  reduce using rule 62 (comp_expr)


State 123

   60 comp_expr: comp_expr LOP_LEQ sh_expr .
   65 sh_expr: sh_expr . LOP_SHL as_expr
   66        | sh_expr . LOP_SHR as_expr

    LOP_SHL  shift, and go to state 83
    LOP_SHR  shift, and go to state 84

    $default  reduce using rule 60 (comp_expr)


State 124

   63 comp_expr: comp_expr LOP_S sh_expr .
   65 sh_expr: sh_expr . LOP_SHL as_expr
   66        | sh_expr . LOP_SHR as_expr

    LOP_SHL  shift, and go to state 83
    LOP_SHR  shift, and go to state 84

    $default  reduce using rule 63 (comp_expr)


State 125

   61 comp_expr: comp_expr LOP_SEQ sh_expr .
   65 sh_expr: sh_expr . LOP_SHL as_expr
   66        | sh_expr . LOP_SHR as_expr

    LOP_SHL  shift, and go to state 83
    LOP_SHR  shift, and go to state 84

    $default  reduce using rule 61 (comp_expr)


State 126

   65 sh_expr: sh_expr LOP_SHL as_expr .
   68 as_expr: as_expr . LOP_ADD term
   69        | as_expr . LOP_SUB term

    LOP_ADD  shift, and go to state 85
    LOP_SUB  shift, and go to state 86

    $default  reduce using rule 65 (sh_expr)


State 127

   66 sh_expr: sh_expr LOP_SHR as_expr .
   68 as_expr: as_expr . LOP_ADD term
   69        | as_expr . LOP_SUB term

    LOP_ADD  shift, and go to state 85
    LOP_SUB  shift, and go to state 86

    $default  reduce using rule 66 (sh_expr)


State 128

   68 as_expr: as_expr LOP_ADD term .
   71 term: term . LOP_MULT factor
   72     | term . LOP_DEV factor
   73     | term . LOP_MOD factor
   74     | term . LOP_DADD
   75     | term . LOP_DSUB

    LOP_MULT  shift, and go to state 87
    LOP_DEV   shift, and go to state 88
    LOP_MOD   shift, and go to state 89
    LOP_DADD  shift, and go to state 90
    LOP_DSUB  shift, and go to state 91

    $default  reduce using rule 68 (as_expr)


State 129

   69 as_expr: as_expr LOP_SUB term .
   71 term: term . LOP_MULT factor
   72     | term . LOP_DEV factor
   73     | term . LOP_MOD factor
   74     | term . LOP_DADD
   75     | term . LOP_DSUB

    LOP_MULT  shift, and go to state 87
    LOP_DEV   shift, and go to state 88
    LOP_MOD   shift, and go to state 89
    LOP_DADD  shift, and go to state 90
    LOP_DSUB  shift, and go to state 91

    $default  reduce using rule 69 (as_expr)


State 130

   71 term: term LOP_MULT factor .

    $default  reduce using rule 71 (term)


State 131

   72 term: term LOP_DEV factor .

    $default  reduce using rule 72 (term)


State 132

   73 term: term LOP_MOD factor .

    $default  reduce using rule 73 (term)


State 133

   26 declaration: T IDENTIFIER LOP_ASSIGN . expr

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 146
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 134

   23 def_func: T IDENTIFIER LPAREN . call_args RPAREN statement
   24         | T IDENTIFIER LPAREN . RPAREN statement

    IDAddr      shift, and go to state 105
    IDPtr       shift, and go to state 106
    RPAREN      shift, and go to state 147
    IDENTIFIER  shift, and go to state 107

    call_args  go to state 148


State 135

   28 IDLIST: expr COMMA . IDLIST

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    IDLIST     go to state 149
    expr       go to state 94
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 136

   30 if_stmt: K_IF LPAREN expr RPAREN . statement K_ELSE statement
   31        | K_IF LPAREN expr RPAREN . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 150
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 137

   32 while_stmt: K_WHILE LPAREN expr RPAREN . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 151
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 138

   34 for_stmt: K_FOR LPAREN declaration SEMICOLON . expr SEMICOLON expr RPAREN statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 152
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 139

   33 for_stmt: K_FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 153
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 140

   26 declaration: T IDENTIFIER . LOP_ASSIGN expr
   78 factor: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 133

    LOP_ASSIGN  [reduce using rule 78 (factor)]
    $default    reduce using rule 78 (factor)


State 141

   37 printf: F_PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 37 (printf)


State 142

   36 printf: F_PRINTF LPAREN STRING COMMA . call_args RPAREN

    IDAddr      shift, and go to state 105
    IDPtr       shift, and go to state 106
    IDENTIFIER  shift, and go to state 107

    call_args  go to state 154


State 143

   38 scanf: F_SCANF LPAREN STRING COMMA . call_args RPAREN

    IDAddr      shift, and go to state 105
    IDPtr       shift, and go to state 106
    IDENTIFIER  shift, and go to state 107

    call_args  go to state 155


State 144

   25 call_func: IDENTIFIER LPAREN call_args RPAREN . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 156
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 145

   20 call_args: call_args COMMA . IDENTIFIER
   21          | call_args COMMA . IDAddr
   22          | call_args COMMA . IDPtr

    IDAddr      shift, and go to state 157
    IDPtr       shift, and go to state 158
    IDENTIFIER  shift, and go to state 159


State 146

   26 declaration: T IDENTIFIER LOP_ASSIGN expr .
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71

    $default  reduce using rule 26 (declaration)


State 147

   24 def_func: T IDENTIFIER LPAREN RPAREN . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 160
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 148

   20 call_args: call_args . COMMA IDENTIFIER
   21          | call_args . COMMA IDAddr
   22          | call_args . COMMA IDPtr
   23 def_func: T IDENTIFIER LPAREN call_args . RPAREN statement

    RPAREN  shift, and go to state 161
    COMMA   shift, and go to state 145


State 149

   28 IDLIST: expr COMMA IDLIST .

    $default  reduce using rule 28 (IDLIST)


State 150

   30 if_stmt: K_IF LPAREN expr RPAREN statement . K_ELSE statement
   31        | K_IF LPAREN expr RPAREN statement .

    K_ELSE  shift, and go to state 162

    K_ELSE    [reduce using rule 31 (if_stmt)]
    $default  reduce using rule 31 (if_stmt)


State 151

   32 while_stmt: K_WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 32 (while_stmt)


State 152

   34 for_stmt: K_FOR LPAREN declaration SEMICOLON expr . SEMICOLON expr RPAREN statement
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    SEMICOLON    shift, and go to state 163


State 153

   33 for_stmt: K_FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN statement
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    SEMICOLON    shift, and go to state 164


State 154

   20 call_args: call_args . COMMA IDENTIFIER
   21          | call_args . COMMA IDAddr
   22          | call_args . COMMA IDPtr
   36 printf: F_PRINTF LPAREN STRING COMMA call_args . RPAREN

    RPAREN  shift, and go to state 165
    COMMA   shift, and go to state 145


State 155

   20 call_args: call_args . COMMA IDENTIFIER
   21          | call_args . COMMA IDAddr
   22          | call_args . COMMA IDPtr
   38 scanf: F_SCANF LPAREN STRING COMMA call_args . RPAREN

    RPAREN  shift, and go to state 166
    COMMA   shift, and go to state 145


State 156

   25 call_func: IDENTIFIER LPAREN call_args RPAREN statement .

    $default  reduce using rule 25 (call_func)


State 157

   21 call_args: call_args COMMA IDAddr .

    $default  reduce using rule 21 (call_args)


State 158

   22 call_args: call_args COMMA IDPtr .

    $default  reduce using rule 22 (call_args)


State 159

   20 call_args: call_args COMMA IDENTIFIER .

    $default  reduce using rule 20 (call_args)


State 160

   24 def_func: T IDENTIFIER LPAREN RPAREN statement .

    $default  reduce using rule 24 (def_func)


State 161

   23 def_func: T IDENTIFIER LPAREN call_args RPAREN . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 167
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 162

   30 if_stmt: K_IF LPAREN expr RPAREN statement K_ELSE . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 168
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 163

   34 for_stmt: K_FOR LPAREN declaration SEMICOLON expr SEMICOLON . expr RPAREN statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 169
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 164

   33 for_stmt: K_FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 52
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    expr       go to state 170
    or_expr    go to state 36
    and_expr   go to state 37
    bor_expr   go to state 38
    xor_expr   go to state 39
    band_expr  go to state 40
    comp_expr  go to state 41
    sh_expr    go to state 42
    as_expr    go to state 43
    term       go to state 44
    factor     go to state 45


State 165

   36 printf: F_PRINTF LPAREN STRING COMMA call_args RPAREN .

    $default  reduce using rule 36 (printf)


State 166

   38 scanf: F_SCANF LPAREN STRING COMMA call_args RPAREN .

    $default  reduce using rule 38 (scanf)


State 167

   23 def_func: T IDENTIFIER LPAREN call_args RPAREN statement .

    $default  reduce using rule 23 (def_func)


State 168

   30 if_stmt: K_IF LPAREN expr RPAREN statement K_ELSE statement .

    $default  reduce using rule 30 (if_stmt)


State 169

   34 for_stmt: K_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr . RPAREN statement
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    RPAREN       shift, and go to state 171


State 170

   33 for_stmt: K_FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN statement
   39 expr: expr . LOP_ASSIGN expr
   40     | expr . LOP_ADDASS expr
   41     | expr . LOP_SUBASS expr
   42     | expr . LOP_MULTASS expr
   43     | expr . LOP_DEVASS expr
   44     | expr . LOP_MODASS expr

    LOP_ADDASS   shift, and go to state 66
    LOP_SUBASS   shift, and go to state 67
    LOP_MULTASS  shift, and go to state 68
    LOP_DEVASS   shift, and go to state 69
    LOP_MODASS   shift, and go to state 70
    LOP_ASSIGN   shift, and go to state 71
    RPAREN       shift, and go to state 172


State 171

   34 for_stmt: K_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 173
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 172

   33 for_stmt: K_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . statement

    TRUE        shift, and go to state 1
    FALSE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    T_VOID      shift, and go to state 7
    K_IF        shift, and go to state 8
    K_WHILE     shift, and go to state 9
    K_FOR       shift, and go to state 10
    F_PRINTF    shift, and go to state 11
    F_SCANF     shift, and go to state 12
    LOP_NOT     shift, and go to state 13
    LOP_BNOT    shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LPAREN      shift, and go to state 16
    LBRACE      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    INTEGER     shift, and go to state 19
    CHAR        shift, and go to state 20
    STRING      shift, and go to state 21

    statement    go to state 174
    expr_stmt    go to state 25
    def_func     go to state 26
    call_func    go to state 27
    declaration  go to state 28
    if_stmt      go to state 29
    while_stmt   go to state 30
    for_stmt     go to state 31
    assignment   go to state 32
    printf       go to state 33
    scanf        go to state 34
    expr         go to state 35
    or_expr      go to state 36
    and_expr     go to state 37
    bor_expr     go to state 38
    xor_expr     go to state 39
    band_expr    go to state 40
    comp_expr    go to state 41
    sh_expr      go to state 42
    as_expr      go to state 43
    term         go to state 44
    factor       go to state 45
    T            go to state 46


State 173

   34 for_stmt: K_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statement .

    $default  reduce using rule 34 (for_stmt)


State 174

   33 for_stmt: K_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement .

    $default  reduce using rule 33 (for_stmt)
