lno@56 @0  statement   children: [@1 @3 ]         function: int func
lno@56 @1  declaration children: [@2 ]            decl: int ret  
lno@56 @2  expression  children: []               expr: int 6
lno@57 @3  statement   children: [@4 ]            stmt: return
lno@57 @4  expression  children: []               expr: int ret
lno@61 @5  statement   children: [@6 @9 @11 @13 @30 @33 ]  function: int main
lno@61 @6  declaration children: [@7 ]            decl: int i  
lno@61 @7  function_callchildren: [@8 ]            function_call: 
lno@61 @8  statement   children: []               empty: 
lno@62 @9  declaration children: [@10 ]           decl: int result  
lno@62 @10 expression  children: []               expr: int 1
lno@63 @11 declaration children: [@12 ]           decl: int j  
lno@63 @12 expression  children: []               expr: int 1
lno@64 @13 statement   children: [@14 @15 @19 @24 ]  stmt: for
lno@64 @14 expression  children: []               expr: int j
lno@64 @15 op          children: [@16 ]           op: BOOL
lno@64 @16 op          children: [@17 @18 ]       op: SEQ
lno@64 @17 expression  children: []               expr: int j
lno@64 @18 expression  children: []               expr: int i
lno@64 @19 op          children: [@20 @23 ]       op: ASSIGN
lno@64 @20 op          children: [@21 @22 ]       op: ADD
lno@64 @21 expression  children: []               expr: int j
lno@64 @22 expression  children: []               expr: int 1
lno@64 @23 expression  children: []               expr: int j
lno@65 @24 statement   children: [@25 ]           stmt: LB_SCOPE
lno@65 @25 op          children: [@26 @29 ]       op: ASSIGN
lno@65 @26 op          children: [@27 @28 ]       op: MULT
lno@65 @27 expression  children: []               expr: int result
lno@65 @28 expression  children: []               expr: int j
lno@65 @29 expression  children: []               expr: int result
lno@68 @30 function_callchildren: [@31 @32 ]       function_call: 
lno@68 @31 expression  children: []               expr: string %d\n
lno@68 @32 expression  children: []               expr: int result
lno@69 @33 statement   children: [@34 ]           stmt: return
lno@69 @34 expression  children: []               expr: int 0
i:0 0    result:0 1    j:0 2    main:0 3    

ret:2 0    func:2 1    

